
spring.mvc.static-path-pattern= /**

server.servlet.context-path = /NRS


# ===============================
# = DATA SOURCE
# ===============================

entitymanager.packagesToScan: com


spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.datasource.url=jdbc:mysql://localhost:3306/nrsdb
spring.datasource.username=root
spring.datasource.password=root

# Recommended for development, showing SQL queries

# Choose the appropriate ddl-auto strategy (e.g., update, create, create-drop, none)
# update: updates the schema if changes are detected (use with caution in production)
# create: creates the schema every time (loses data on restart)
# create-drop: creates schema on startup, drops on shutdown
# none: no DDL operations by Hibernate (you manage schema manually)

#spring.jpa.hibernate.ddl-auto=update

# UPDATED: Use the correct MySQL Dialect for Hibernate 6.x
# For MySQL 8+, use MySQL8Dialect. For older MySQL 5.7, use MySQL57Dialect.
# The `org.hibernate.dialect.MySQLDialect` is also common and often works by detecting the version.
# Let's use the most specific for MySQL 8+ if that's what you're running.

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# UPDATED: Use the modern MySQL Connector/J driver class name
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

